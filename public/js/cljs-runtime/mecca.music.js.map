{"version":3,"sources":["mecca/music.cljs"],"mappings":"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","names":["mecca.music/audio-context","js/window.AudioContext.","js/window.AudioContext","js/window.webkitAudioContext","js/mecca","js/mecca.music","js/mecca.music.audiocontext","mecca.music/audiocontext","reagent.core.atom","mecca.music/current-time","context","mecca.music/lookahead","mecca.music/scheduleAheadTime","mecca.music/scheduler","next-note-time","G__26498","re-frame.core/subscribe","current-note","G__26499","tempo","G__26500","cljs.core/deref","G__26503","re-frame.core/dispatch","G__26504","mecca.music/mmbass-minor-triad","time","root","mecca.music/mmbass-major-triad","mecca.music/mm8","pitch","cljs.core.apply","cljs.core/concat","iter__5523__auto__","s__26524","cljs.core/LazySeq","temp__5804__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__5521__auto__","size__5522__auto__","cljs.core/count","b__26526","cljs.core/chunk-buffer","i__26525","cljs.core/-nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__26523","cljs.core/chunk-rest","cljs.core/first","cljs.core/cons","cljs.core/rest","beat","cljs.core.range","mecca.music/mmbass","cljs.core.concat","mecca.music/mario-jump?","G__26548","notes","G__26549","jump","G__26551","and__5043__auto__","G__26556","p1__26543#","cljs.core.filter","cljs.core._EQ_","G__26564","mecca.music/song-done?","G__26569","playing?","G__26571","now","length","cljs.core/max","p1__26567#","cljs.core.map","started","G__26572","elapsed","beat-length","G__26573","current-beat","last-drawn-pos","G__26574","G__26575","G__26576","G__26581","mecca.music/dispatch-timer-event","G__26582","js/mecca.music.do-timer","mecca.music/do-timer","js/setInterval","mecca.music/load-sound","named-url","out","cljs.core.async.chan","req","js/XMLHttpRequest","e","cljs.core.async.put_BANG_","cljs.core.assoc","cljs.core.async/close!","mecca.music/decode","decoded-buffer","js/console","cljs.core.prn","mecca.music/buffer-source","buffer","source","mecca.music/get-and-decode","c__17409__auto__","cljs.core.async.impl.dispatch/run","f__17410__auto__","switch__16977__auto__","state_26603","state_val_26604","inst_26591","cljs.core.async.impl.ioc-helpers/take!","inst_26593","statearr-26605","statearr-26608","statearr-26609","inst_26595","statearr-26621","inst_26601","cljs.core.async.impl.ioc-helpers/return-chan","inst_26597","statearr-26622","statearr-26630","state-machine__16978__auto__","ret-value__16979__auto__","result__16980__auto__","cljs.core/keyword-identical?","ex__16981__auto__","e26631","statearr-26632","statearr-26633","state__17411__auto__","statearr-26641","cljs.core.async.impl.ioc-helpers/USER-START-IDX","cljs.core.async.impl.ioc-helpers/run-state-machine-wrapped","mecca.music/load-samples","state_26672","state_val_26673","inst_26642","cljs.core/PersistentHashMap","inst_26643","inst_26644","inst_26645","statearr-26674","statearr-26675","inst_26647","inst_26648","inst_26649","cljs.core/not","statearr-26677","statearr-26678","inst_26669","inst_26651","inst_26652","inst_26654","inst_26655","inst_26656","inst_26657","statearr-26683","statearr-26684","inst_26667","statearr-26685","inst_26659","inst_26660","inst_26661","inst_26662","inst_26663","statearr-26686","statearr-26687","statearr-26694","e26696","statearr-26697","statearr-26699","statearr-26700","js/mecca.music.loading-samples","mecca.music/loading-samples","state_26707","state_val_26708","inst_26701","inst_26703","inst_26704","inst_26705","statearr-26709","statearr-26710","e26711","statearr-26712","statearr-26713","statearr-26714","mecca.music/samples","mecca.music/pitch->rate","midi-num","G__26715","js/Error","mecca.music/play-sample","instrument","audio-buffer","cljs.core.get","sample-source","compressor","analyser","gain","G__26717","mecca.music/play-at","G__26718","mecca.music/play-song!","G__26719","G__26720","G__26721","cljs.core.doall","s__26723","b__26725","i__26724","map__26726","cljs.core/--destructure-map","iter__26722","map__26727","mecca.music/get-bytes!","freq-data","cljs.core/chunk-first"],"sourcesContent":["(ns ^:figwheel-hooks mecca.music\r\n  (:require\r\n   [cljs.core.async :refer [<! timeout chan put! close!]]\r\n   [reagent.core :as r]\r\n   [re-frame.core :as rf :refer [subscribe dispatch]])\r\n  (:require-macros\r\n   [cljs.core.async.macros :refer [go go-loop]]))\r\n\r\n(defn ^:export audio-context []\r\n  (if js/window.AudioContext.\r\n    (js/window.AudioContext.)\r\n    (js/window.webkitAudioContext.)))\r\n\r\n(defonce audiocontext (r/atom (audio-context)))\r\n\r\n(defn ^:export current-time [context]\r\n  (.-currentTime context))\r\n\r\n(def lookahead 25.0)\r\n\r\n(def scheduleAheadTime 0.1)\r\n\r\n(defn scheduler []\r\n  (let [next-note-time (subscribe [:next-note-time])\r\n        current-note (subscribe [:current-note])\r\n        tempo (subscribe [:tempo])\r\n        ]\r\n    (if (< @next-note-time\r\n         (+ scheduleAheadTime\r\n            (current-time @audiocontext)))\r\n      (dispatch [:schedule-note @current-note @next-note-time])\r\n      (dispatch [:next-note]))))\r\n\r\n\r\n(defn mmbass-minor-triad [time root]\r\n  [{:time time :instrument 15, :pitch root}\r\n   {:time (+ time 1.5) :instrument 15, :pitch root}\r\n   {:time (+ time 2) :instrument 15, :pitch (+ root 3)}\r\n   {:time (+ time 3) :instrument 15, :pitch (+ root 7)}\r\n   {:time (+ time 4.5) :instrument 15, :pitch root}\r\n   {:time (+ time 5) :instrument 15, :pitch root}\r\n   {:time (+ time 5.5) :instrument 15, :pitch root}\r\n   {:time (+ time 6) :instrument 15, :pitch (+ root 3)}\r\n   {:time (+ time 7) :instrument 15, :pitch (+ root 7)}])\r\n\r\n(defn mmbass-major-triad [time root]\r\n  [{:time time :instrument 15, :pitch root}\r\n   {:time (+ time 1.5) :instrument 15, :pitch root}\r\n   {:time (+ time 2) :instrument 15, :pitch (+ root 4)}\r\n   {:time (+ time 3) :instrument 15, :pitch (+ root 7)}\r\n   {:time (+ time 4.5) :instrument 15, :pitch root}\r\n   {:time (+ time 5) :instrument 15, :pitch root}\r\n   {:time (+ time 5.5) :instrument 15, :pitch root}\r\n   {:time (+ time 6) :instrument 15, :pitch (+ root 4)}\r\n   {:time (+ time 7) :instrument 15, :pitch (+ root 7)}])\r\n\r\n(defn mm8 [time pitch]\r\n  (apply concat\r\n   (for [beat (range 0 8 2)]\r\n     (mmbass-minor-triad (+ beat time) pitch))))\r\n\r\n(defn mmbass []\r\n  (concat\r\n   (mmbass-minor-triad 0 64)\r\n   (mmbass-major-triad 8 60)\r\n   (mmbass-major-triad 16 62)\r\n   (mmbass-minor-triad 24 64)))\r\n\r\n(defn mario-jump? []\r\n  (let [beat (subscribe [:current-position])\r\n        notes (subscribe [:notes])\r\n        jump (subscribe [:mario-jump])]\r\n    (when (and @(subscribe [:playing?])\r\n           (zero? @jump))\r\n      (if (< 0 (count (filter #(= (:time %) (inc @beat))\r\n                              @notes)))\r\n      (dispatch [:jump!])))))\r\n\r\n(defn song-done? []\r\n  (let [notes (subscribe [:notes])\r\n        playing? @(subscribe [:playing?])\r\n        now (.-currentTime @audiocontext)\r\n        length (apply max (map #(:time %) @notes))\r\n        started (subscribe [:play-start])\r\n        elapsed (- (current-time @audiocontext) @started)\r\n        beat-length (/ 60 @(subscribe [:tempo]))\r\n        current-beat (/ elapsed beat-length)\r\n        last-drawn-pos (subscribe [:current-position])]\r\n    (when playing?\r\n      (if (< length current-beat)\r\n        (dispatch [:play-off])\r\n        (if (< @last-drawn-pos current-beat)\r\n          (do (dispatch [:move-mario])\r\n            (dispatch [:advance-position])))))\r\n    (mario-jump?)))\r\n\r\n(defn dispatch-timer-event []\r\n  (dispatch [:tick!])\r\n      (song-done?)\r\n  (scheduler))\r\n\r\n(defonce do-timer\r\n  (js/setInterval dispatch-timer-event 150))\r\n\r\n(defn load-sound [named-url]\r\n  (let [out (chan)\r\n        req (js/XMLHttpRequest.)]\r\n    (set! (.-responseType req) \"arraybuffer\")\r\n    (set! (.-onload req) (fn [e]\r\n                           (if (= (.-status req) 200)\r\n                             (do (put! out (assoc named-url :buffer (.-response req)))\r\n                                 (close! out))\r\n                             (close! out))))\r\n    (.open req \"GET\" (:url named-url) true)\r\n    (.send req)\r\n    out))\r\n\r\n(defn decode [named-url]\r\n  (let [out (chan)]\r\n    (if (:buffer named-url)\r\n      (do\r\n        (.decodeAudioData\r\n         @audiocontext (:buffer named-url)\r\n         (fn [decoded-buffer]\r\n           (put! out (assoc named-url :decoded-buffer decoded-buffer))\r\n           (close! out))\r\n         (fn []\r\n           (.error js/console \"Error loading file \" (prn named-url))\r\n           (close! out))))\r\n      (close! out))\r\n    out))\r\n\r\n(defn buffer-source [buffer]\r\n  (let [source (.createBufferSource @audiocontext)]\r\n    (set! (.-buffer source) buffer)\r\n    source))\r\n\r\n(defn get-and-decode [named-url]\r\n  (go\r\n    (when-let [s (<! (load-sound named-url))]\r\n      (<! (decode s)))))\r\n\r\n(defn load-samples []\r\n  (go-loop [result {}\r\n            sounds (range 1 34)]\r\n    (if-not (nil? (first sounds))\r\n      (let [sound (first sounds)                   ; for Github Pages - remove the '/mecca/resources/public' to run locally\r\n            decoded-buffer (<! (get-and-decode {:url (str \"/audio/\" sound \".mp3\")\r\n                                                :sound sound}))]\r\n        (prn sound)\r\n        (prn decoded-buffer)\r\n        (recur (assoc result sound decoded-buffer)\r\n               (rest sounds)))\r\n      result)))\r\n\r\n(defonce loading-samples\r\n  (go\r\n    (def samples (<! (load-samples)))\r\n    (prn \"Samples loaded\")))\r\n\r\n(defn pitch->rate [midi-num]\r\n  (case midi-num\r\n    55 0.5\r\n    56 0.5297315471796479\r\n    57 0.5612310241546867\r\n    58 0.5946035575013607\r\n    59 0.6299605249474368\r\n    60 0.6674199270850174\r\n    61 0.7071067811865477\r\n    62 0.7491535384383409\r\n    63 0.7937005259840998\r\n    64 0.8408964152537146\r\n    65 0.8908987181403394\r\n    66 0.9438743126816935\r\n    67 1\r\n    68 1.0594630943592953\r\n    69 1.122462048309373\r\n    70 1.1892071150027212\r\n    71 1.2599210498948734\r\n    72 1.3348398541700346\r\n    73 1.4142135623730954\r\n    74 1.498307076876682\r\n    75 1.5874010519682\r\n    76 1.6817928305074297\r\n    77 1.7817974362806792\r\n    78 1.8877486253633877\r\n    79 2\r\n    80 2.1189261887185906\r\n    81 2.244924096618746\r\n    82 2.3784142300054425\r\n    83 2.519842099789747))\r\n\r\n(defn play-sample [instrument pitch]\r\n  (let [context audiocontext\r\n        now (.-currentTime @context)\r\n        audio-buffer (:decoded-buffer (get samples instrument))\r\n        sample-source (.createBufferSource @context)\r\n        compressor (.createDynamicsCompressor @context)\r\n        analyser (.createAnalyser @context)\r\n        gain (.createGain @context)\r\n        tempo (subscribe [:tempo])]\r\n    (set! (.-buffer sample-source) audio-buffer)\r\n    (.setValueAtTime\r\n     (.-playbackRate sample-source)\r\n     (pitch->rate pitch)\r\n     now)\r\n    (.connect sample-source gain)\r\n    (.connect gain (.-destination @context))\r\n    (.setValueAtTime (.-gain gain) 0 (+ (/ 60 @tempo ) now))\r\n    (.start sample-source)\r\n    sample-source))\r\n\r\n(defn play-at [instrument pitch time]\r\n  (let [context audiocontext\r\n        audio-buffer (:decoded-buffer (get samples instrument))\r\n        sample-source (.createBufferSource @context)\r\n        tempo (subscribe [:tempo])\r\n        gain (.createGain @context)]\r\n    (set! (.-buffer sample-source) audio-buffer)\r\n    (.setValueAtTime\r\n     (.-playbackRate sample-source) (pitch->rate (if (< 83 pitch)\r\n                                                   (- pitch 24)\r\n                                                   pitch))\r\n     time)\r\n    (.connect sample-source gain)\r\n    (.connect gain (.-destination @context))\r\n    (.setValueAtTime (.-gain gain) 1.0 time)\r\n    (.exponentialRampToValueAtTime\r\n     (.-gain gain)\r\n     0.01 (+ (/ 60 @tempo) time))\r\n    (.start sample-source time)\r\n    sample-source))\r\n\r\n(defn play-song! []\r\n  (let [notes (subscribe [:notes])\r\n        now (.-currentTime @audiocontext)\r\n        tempo (subscribe [:tempo])]\r\n    (dispatch [:reset-position])\r\n    (doall (for [{:keys [time instrument pitch]} @notes]\r\n             (play-at instrument pitch (+ now (* (/ 60 @tempo) time)))))))\r\n\r\n(defn get-bytes! [analyser freq-data]\r\n  (.getByteFrequencyData analyser freq-data)\r\n  freq-data)\r\n"]}